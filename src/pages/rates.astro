---
import '../styles/global.css';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import Base from '../components/Base.astro';
import Layout from '../layouts/Layout.astro';

const pageTitle = "International Info";

// Define interface for rate data
interface ExchangeRate {
    country: string;
    currency: string;
    exchange_rate: string;
}

const response = await fetch('https://api.fiscaldata.treasury.gov/services/api/fiscal_service/v1/accounting/od/rates_of_exchange');
const data = await response.json();
const exchangeRates = data.data as ExchangeRate[] || [];

---
<Base />
<Navigation />



<html lang="en">
<body>

    <h1>{pageTitle}</h1>

        <h2>Exchange Rates to USD</h2>
        <p style="font-size: 80%; margin: 0%; padding: 0:">data sourced from treasury.gov</p>
        <div class="currency-grid">
            {exchangeRates.map((rate: ExchangeRate) => (
                    <div class="currency-card blob">
                        <h3>{rate.country}</h3>
                        <p><strong></strong> {rate.currency}</p>
                        <p><strong>Exchange Rate:</strong> {rate.exchange_rate} / 1$ USD</p>
                    </div>
            ))}
    </div>
</body>



<style>


    .currency-card {
        border-radius: 8px;
        padding: 1rem;
        grid-column: span 1;
        background-color:#eba0ac;
    }

    .currency-card.blob {
            aspect-ratio: /2;
        width: fit-content;

            clip-path: shape(from 87.45% 45.02%,curve to 92.48% 56.45% with 90.99% 50.00%,curve to 92.05% 69.35% with 93.97% 62.91%,curve to 82.42% 77.15% with 90.14% 75.80%,curve to 71.01% 83.22% with 74.69% 78.49%,curve to 61.91% 91.53% with 67.33% 87.95%,curve to 49.74% 96.95% with 56.49% 95.12%,curve to 38.70% 91.46% with 42.99% 98.79%,curve to 25.99% 85.79% with 34.41% 84.13%,curve to 15.38% 80.54% with 17.56% 87.44%,curve to 14.30% 66.90% with 13.20% 73.65%,curve to 13.33% 55.08% with 15.41% 60.16%,curve to 11.20% 44.30% with 11.25% 50.00%,curve to 11.95% 32.32% with 11.14% 38.59%,curve to 16.84% 21.25% with 12.75% 26.06%,curve to 27.31% 15.38% with 20.92% 16.44%,curve to 38.83% 11.12% with 33.70% 14.32%,curve to 50.39% 5.23% with 43.95% 7.93%,curve to 62.85% 5.60% with 56.83% 2.53%,curve to 72.70% 14.03% with 68.88% 8.67%,curve to 79.11% 24.51% with 76.53% 19.39%,curve to 82.80% 34.84% with 81.69% 29.63%,curve to 87.45% 45.02% with 83.91% 40.04%);
        overflow: hidden;
    }



    .currency-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr));
        gap: 2rem;
        justify-content: center;
    }



    @media (max-width: 1600px) {
        .currency-grid {
            grid-template-columns: repeat(6, minmax(10rem, 1fr));
        }
    }

    @media (max-width: 1400px) {
        .currency-grid {
            grid-template-columns: repeat(5, minmax(10rem, 1fr));
        }
    }

    @media (max-width:1200px) {
        .currency-grid {
            grid-template-columns: repeat(4, minmax(10rem, 1fr));
        }
    }

    @media (max-width:1000px) {
        .currency-grid {
            grid-template-columns: repeat(3, minmax(10rem, 1fr));
        }
    }

    @media (max-width: 800px) {
        .currency-grid {
            grid-template-columns: repeat(2, minmax(10rem, 1fr));
        }
    }


    .currency-card:hover {
        background-color: #fab387;
        transform: translateX(-4px);
    }


    </style>